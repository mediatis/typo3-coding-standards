'on':
    push:
        branches:
            - main
            - feature/security-checks
    pull_request:
        branches:
            - main
permissions:
    contents: read
jobs:
    code-quality:
        runs-on: ubuntu-22.04
        strategy:
            fail-fast: false
            matrix:
                php_version:
                    - '8.1'
                    - '8.2'
        steps:
            -
                name: Checkout
                uses: actions/checkout@v4
            -
                name: 'Install PHP'
                uses: shivammathur/setup-php@v2
                with:
                    php-version: '${{ matrix.php_version }}'
                    coverage: none
                    tools: 'composer:v2.4'
            -
                name: 'Show Composer version'
                run: 'composer --version'
            -
                name: 'Show the Composer configuration'
                run: 'composer config --global --list'
            -
                name: 'Cache dependencies installed with composer'
                uses: actions/cache@v3
                with:
                    key: 'php${{ matrix.php_version }}'
                    path: ~/.cache/composer
                    restore-keys: "php${{ matrix.php_version }}-composer-\n"
            -
                name: 'Install Composer dependencies'
                run: "composer install --no-progress\n"
            -
                name: 'Run command'
                run: "composer ci\n"
    semgrep:
        image: 'returntocorp/semgrep-agent:latest'
        script: 'semgrep-agent --gitlab-json > gl-sast-scanning-report.json'
        stage: security-scanner
        interruptible: true
        allow_failure: false
        retry:
            max: 2
            when:
                - runner_system_failure
                - stuck_or_timeout_failure
        variables:
            SEMGREP_RULES: 'p/php p/phpcs-security-audit p/command-injection p/sql-injection p/cwe-top-25 p/owasp-top-ten'
            SEMGREP_GITLAB_JSON: '1'
        artifacts:
            when: always
            reports:
                sast: gl-sast-scanning-report.json
            paths:
                - gl-sast-scanning-report.json
        name: semgrep
        runs-on: ubuntu-22.04
        container:
            image: semgrep/semgrep
        if: "(github.actor != 'dependabot[bot]')"
        steps:
            -
                uses: actions/checkout@v4
            -
                run: 'semgrep scan --config auto --error'
    trivy:
        stage: security-scanner
        image: 'docker:stable'
        services:
            -
                name: 'docker:dind'
                entrypoint:
                    - env
                    - '-u'
                    - DOCKER_HOST
                command:
                    - dockerd-entrypoint.sh
        variables:
            DOCKER_HOST: 'tcp://docker:2375/'
            DOCKER_DRIVER: overlay2
            DOCKER_TLS_CERTDIR: ''
        before_script:
            - 'export TRIVY_VERSION=$(wget -qO - "https://api.github.com/repos/aquasecurity/trivy/releases/latest" | grep ''"tag_name":'' | sed -E ''s/.*"v([^"]+)".*/\1/'')'
            - 'echo $TRIVY_VERSION'
            - 'wget --no-verbose https://github.com/aquasecurity/trivy/releases/download/v${TRIVY_VERSION}/trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz -O - | tar -zxvf -'
        allow_failure: false
        script:
            - './trivy fs --exit-code 0 --cache-dir .trivycache/ --no-progress --format template --template "@contrib/gitlab.tpl" -o gl-container-scanning-report.json ./'
            - './trivy fs --exit-code 0 --cache-dir .trivycache/ --no-progress --severity HIGH ./'
            - './trivy fs --exit-code 1 --cache-dir .trivycache/ --severity CRITICAL --no-progress ./'
        cache:
            paths:
                - .trivycache/
        artifacts:
            reports:
                container_scanning: gl-container-scanning-report.json
        name: trivy
        runs-on: ubuntu-22.04
        steps:
            -
                name: 'Checkout code'
                uses: actions/checkout@v3
            -
                name: 'Run Trivy vulnerability scanner in repo mode'
                uses: aquasecurity/trivy-action@0.20.0
                with:
                    scan-type: fs
                    ignore-unfixed: true
                    format: sarif
                    output: trivy-results.sarif
                    severity: CRITICAL
