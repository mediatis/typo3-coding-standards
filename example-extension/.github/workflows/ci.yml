on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main
permissions:
    contents: read
jobs:
    code-quality:
        runs-on: ubuntu-22.04
        strategy:
            fail-fast: false
            matrix:
                php_version: []
                typo3_version: []
        steps:
            -
                name: Checkout
                uses: actions/checkout@v4
            -
                name: 'Install PHP'
                uses: shivammathur/setup-php@v2
                with:
                    php-version: '${{ matrix.php_version }}'
                    coverage: none
                    tools: 'composer:v2.4'
            -
                name: 'Show Composer version'
                run: 'composer --version'
            -
                name: 'Show the Composer configuration'
                run: 'composer config --global --list'
            -
                name: 'Cache dependencies installed with composer'
                uses: actions/cache@v3
                with:
                    key: 'php${{ matrix.php_version }}-typo3${{ matrix.typo3_version }}'
                    path: ~/.cache/composer
                    restore-keys: "php${{ matrix.php_version }}-composer-\n"
            -
                name: 'Install Composer dependencies'
                run: "composer require typo3/cms-core ^${{ matrix.typo3_version }} --no-progress\ncomposer install --no-progress\n"
            -
                name: 'Run command'
                run: "composer ci\n"
    trivy:
      name: Trivy
      runs-on: ubuntu-22.04
      steps:
        - name: Checkout code
          uses: actions/checkout@v3

        - name: Run Trivy vulnerability scanner in repo mode
          uses: aquasecurity/trivy-action@0.20.0
          with:
            scan-type: 'fs'
            ignore-unfixed: true
            format: 'sarif'
            output: 'trivy-results.sarif'
            severity: 'CRITICAL'

    semgrep:
      # User definable name of this GitHub Actions job.
      name: Semgrep
      # If you are self-hosting, change the following `runs-on` value:
      runs-on: ubuntu-latest

      container:
        # A Docker image with Semgrep installed. Do not change this.
        image: semgrep/semgrep

      # Skip any PR created by dependabot to avoid permission issues:
      if: (github.actor != 'dependabot[bot]')

      steps:
        # Fetch project source with GitHub Actions Checkout. Use either v3 or v4.
        - uses: actions/checkout@v4
        # Run the "semgrep scan" command on the command line of the docker image.
        - run: semgrep scan --config auto --error